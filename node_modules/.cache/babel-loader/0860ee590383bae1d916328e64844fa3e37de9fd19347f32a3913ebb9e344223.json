{"ast":null,"code":"/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n  obj = flag(obj, 'object');\n  types = types.map(function (t) {\n    return t.toLowerCase();\n  });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~['a', 'e', 'i', 'o', 'u'].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n  var objType = type(obj).toLowerCase();\n  if (!types.some(function (expected) {\n    return objType === expected;\n  })) {\n    throw new AssertionError(flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given', undefined, ssfi);\n  }\n};","map":{"version":3,"names":["AssertionError","require","flag","type","module","exports","expectTypes","obj","types","flagMsg","ssfi","map","t","toLowerCase","sort","str","index","art","indexOf","charAt","or","length","join","objType","some","expected","undefined"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/chai/lib/chai/utils/expectTypes.js"],"sourcesContent":["/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC/C,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEjCG,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAChD,IAAIC,OAAO,GAAGP,IAAI,CAACK,GAAG,EAAE,SAAS,CAAC;EAClC,IAAIG,IAAI,GAAGR,IAAI,CAACK,GAAG,EAAE,MAAM,CAAC;EAE5BE,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,IAAI,GAAG,EAAE;EAEvCF,GAAG,GAAGL,IAAI,CAACK,GAAG,EAAE,QAAQ,CAAC;EACzBC,KAAK,GAAGA,KAAK,CAACG,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACC,WAAW,CAAC,CAAC;EAAE,CAAC,CAAC;EAC3DL,KAAK,CAACM,IAAI,CAAC,CAAC;;EAEZ;EACA,IAAIC,GAAG,GAAGP,KAAK,CAACG,GAAG,CAAC,UAAUC,CAAC,EAAEI,KAAK,EAAE;IACtC,IAAIC,GAAG,GAAG,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAACC,OAAO,CAACN,CAAC,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG;IACxE,IAAIC,EAAE,GAAGZ,KAAK,CAACa,MAAM,GAAG,CAAC,IAAIL,KAAK,KAAKR,KAAK,CAACa,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;IACpE,OAAOD,EAAE,GAAGH,GAAG,GAAG,GAAG,GAAGL,CAAC;EAC3B,CAAC,CAAC,CAACU,IAAI,CAAC,IAAI,CAAC;EAEb,IAAIC,OAAO,GAAGpB,IAAI,CAACI,GAAG,CAAC,CAACM,WAAW,CAAC,CAAC;EAErC,IAAI,CAACL,KAAK,CAACgB,IAAI,CAAC,UAAUC,QAAQ,EAAE;IAAE,OAAOF,OAAO,KAAKE,QAAQ;EAAE,CAAC,CAAC,EAAE;IACrE,MAAM,IAAIzB,cAAc,CACtBS,OAAO,GAAG,wBAAwB,GAAGM,GAAG,GAAG,QAAQ,GAAGQ,OAAO,GAAG,QAAQ,EACxEG,SAAS,EACThB,IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}