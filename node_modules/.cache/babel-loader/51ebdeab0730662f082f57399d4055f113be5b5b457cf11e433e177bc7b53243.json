{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspectString;\nvar _helpers = require(\"./helpers\");\nconst stringEscapeChars = new RegExp(\"['\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\" + '\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]', 'g');\nconst escapeCharacters = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\'\n};\nconst hex = 16;\nconst unicodeLength = 4;\nfunction escape(char) {\n  return escapeCharacters[char] || `\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`;\n}\nfunction inspectString(string, options) {\n  if (stringEscapeChars.test(string)) {\n    string = string.replace(stringEscapeChars, escape);\n  }\n  return options.stylize(`'${(0, _helpers.truncate)(string, options.truncate - 2)}'`, 'string');\n}","map":{"version":3,"names":["_helpers","require","stringEscapeChars","RegExp","escapeCharacters","hex","unicodeLength","escape","char","charCodeAt","toString","slice","inspectString","string","options","test","replace","stylize","truncate"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/loupe/lib/string.js"],"sourcesContent":["import { truncate } from './helpers'\n\nconst stringEscapeChars = new RegExp(\n  \"['\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\" +\n    '\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]',\n  'g'\n)\n\nconst escapeCharacters = {\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\f': '\\\\f',\n  '\\r': '\\\\r',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n}\nconst hex = 16\nconst unicodeLength = 4\nfunction escape(char) {\n  return escapeCharacters[char] || `\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`\n}\n\nexport default function inspectString(string, options) {\n  if (stringEscapeChars.test(string)) {\n    string = string.replace(stringEscapeChars, escape)\n  }\n  return options.stylize(`'${truncate(string, options.truncate - 2)}'`, 'string')\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAEA,MAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAClC,6EAA6E,GAC3E,sEAAsE,EACxE,GACF,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvB,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,GAAG,EAAE,KAAK;EACV,IAAI,EAAE;AACR,CAAC;AACD,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,aAAa,GAAG,CAAC;AACvB,SAASC,MAAMA,CAACC,IAAI,EAAE;EACpB,OAAOJ,gBAAgB,CAACI,IAAI,CAAC,IAAK,MAAM,OAAMA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACL,GAAG,CAAE,EAAC,CAACM,KAAK,CAAC,CAACL,aAAa,CAAE,EAAC;AAC1G;AAEe,SAASM,aAAaA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACrD,IAAIZ,iBAAiB,CAACa,IAAI,CAACF,MAAM,CAAC,EAAE;IAClCA,MAAM,GAAGA,MAAM,CAACG,OAAO,CAACd,iBAAiB,EAAEK,MAAM,CAAC;EACpD;EACA,OAAOO,OAAO,CAACG,OAAO,CAAE,IAAG,IAAAC,iBAAQ,EAACL,MAAM,EAAEC,OAAO,CAACI,QAAQ,GAAG,CAAC,CAAE,GAAE,EAAE,QAAQ,CAAC;AACjF"},"metadata":{},"sourceType":"script","externalDependencies":[]}