{"ast":null,"code":"/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude() {\n  var excludes = [].slice.call(arguments);\n  function excludeProps(res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n  return function extendExclude() {\n    var args = [].slice.call(arguments),\n      i = 0,\n      res = {};\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n    return res;\n  };\n}\n;\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError(message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON'),\n    props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack'),\n    props = extend({\n      name: this.name\n    }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n  return props;\n};","map":{"version":3,"names":["exclude","excludes","slice","call","arguments","excludeProps","res","obj","Object","keys","forEach","key","indexOf","extendExclude","args","i","length","module","exports","AssertionError","message","_props","ssf","extend","props","showDiff","Error","captureStackTrace","e","stack","prototype","create","name","constructor","toJSON"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/assertion-error/index.js"],"sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}