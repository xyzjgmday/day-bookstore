{"ast":null,"code":"/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag'),\n  getActual = require('./getActual'),\n  objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate'),\n    val = flag(obj, 'object'),\n    expected = args[3],\n    actual = getActual(obj, args),\n    msg = negate ? args[2] : args[1],\n    flagMsg = flag(obj, 'message');\n  if (typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg.replace(/#\\{this\\}/g, function () {\n    return objDisplay(val);\n  }).replace(/#\\{act\\}/g, function () {\n    return objDisplay(actual);\n  }).replace(/#\\{exp\\}/g, function () {\n    return objDisplay(expected);\n  });\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};","map":{"version":3,"names":["flag","require","getActual","objDisplay","module","exports","getMessage","obj","args","negate","val","expected","actual","msg","flagMsg","replace"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/chai/lib/chai/utils/getMessage.js"],"sourcesContent":["/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACxBC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;EAClCE,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,SAASC,UAAUA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC9C,IAAIC,MAAM,GAAGT,IAAI,CAACO,GAAG,EAAE,QAAQ,CAAC;IAC5BG,GAAG,GAAGV,IAAI,CAACO,GAAG,EAAE,QAAQ,CAAC;IACzBI,QAAQ,GAAGH,IAAI,CAAC,CAAC,CAAC;IAClBI,MAAM,GAAGV,SAAS,CAACK,GAAG,EAAEC,IAAI,CAAC;IAC7BK,GAAG,GAAGJ,MAAM,GAAGD,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;IAChCM,OAAO,GAAGd,IAAI,CAACO,GAAG,EAAE,SAAS,CAAC;EAElC,IAAG,OAAOM,GAAG,KAAK,UAAU,EAAEA,GAAG,GAAGA,GAAG,CAAC,CAAC;EACzCA,GAAG,GAAGA,GAAG,IAAI,EAAE;EACfA,GAAG,GAAGA,GAAG,CACNE,OAAO,CAAC,YAAY,EAAE,YAAY;IAAE,OAAOZ,UAAU,CAACO,GAAG,CAAC;EAAE,CAAC,CAAC,CAC9DK,OAAO,CAAC,WAAW,EAAE,YAAY;IAAE,OAAOZ,UAAU,CAACS,MAAM,CAAC;EAAE,CAAC,CAAC,CAChEG,OAAO,CAAC,WAAW,EAAE,YAAY;IAAE,OAAOZ,UAAU,CAACQ,QAAQ,CAAC;EAAE,CAAC,CAAC;EAErE,OAAOG,OAAO,GAAGA,OAAO,GAAG,IAAI,GAAGD,GAAG,GAAGA,GAAG;AAC7C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}