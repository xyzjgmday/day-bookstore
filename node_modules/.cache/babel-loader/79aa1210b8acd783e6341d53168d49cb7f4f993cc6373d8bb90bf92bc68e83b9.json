{"ast":null,"code":"var type = require('type-detect');\nvar flag = require('./flag');\nfunction isObjectType(obj) {\n  var objectType = type(obj);\n  var objectTypes = ['Array', 'Object', 'function'];\n  return objectTypes.indexOf(objectType) !== -1;\n}\n\n/**\n * ### .getOperator(message)\n *\n * Extract the operator from error message.\n * Operator defined is based on below link\n * https://nodejs.org/api/assert.html#assert_assert.\n *\n * Returns the `operator` or `undefined` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getOperator\n * @api public\n */\n\nmodule.exports = function getOperator(obj, args) {\n  var operator = flag(obj, 'operator');\n  var negate = flag(obj, 'negate');\n  var expected = args[3];\n  var msg = negate ? args[2] : args[1];\n  if (operator) {\n    return operator;\n  }\n  if (typeof msg === 'function') msg = msg();\n  msg = msg || '';\n  if (!msg) {\n    return undefined;\n  }\n  if (/\\shave\\s/.test(msg)) {\n    return undefined;\n  }\n  var isObject = isObjectType(expected);\n  if (/\\snot\\s/.test(msg)) {\n    return isObject ? 'notDeepStrictEqual' : 'notStrictEqual';\n  }\n  return isObject ? 'deepStrictEqual' : 'strictEqual';\n};","map":{"version":3,"names":["type","require","flag","isObjectType","obj","objectType","objectTypes","indexOf","module","exports","getOperator","args","operator","negate","expected","msg","undefined","test","isObject"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/chai/lib/chai/utils/getOperator.js"],"sourcesContent":["var type = require('type-detect');\n\nvar flag = require('./flag');\n\nfunction isObjectType(obj) {\n  var objectType = type(obj);\n  var objectTypes = ['Array', 'Object', 'function'];\n\n  return objectTypes.indexOf(objectType) !== -1;\n}\n\n/**\n * ### .getOperator(message)\n *\n * Extract the operator from error message.\n * Operator defined is based on below link\n * https://nodejs.org/api/assert.html#assert_assert.\n *\n * Returns the `operator` or `undefined` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getOperator\n * @api public\n */\n\nmodule.exports = function getOperator(obj, args) {\n  var operator = flag(obj, 'operator');\n  var negate = flag(obj, 'negate');\n  var expected = args[3];\n  var msg = negate ? args[2] : args[1];\n\n  if (operator) {\n    return operator;\n  }\n\n  if (typeof msg === 'function') msg = msg();\n\n  msg = msg || '';\n  if (!msg) {\n    return undefined;\n  }\n\n  if (/\\shave\\s/.test(msg)) {\n    return undefined;\n  }\n\n  var isObject = isObjectType(expected);\n  if (/\\snot\\s/.test(msg)) {\n    return isObject ? 'notDeepStrictEqual' : 'notStrictEqual';\n  }\n\n  return isObject ? 'deepStrictEqual' : 'strictEqual';\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEjC,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE5B,SAASE,YAAYA,CAACC,GAAG,EAAE;EACzB,IAAIC,UAAU,GAAGL,IAAI,CAACI,GAAG,CAAC;EAC1B,IAAIE,WAAW,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC;EAEjD,OAAOA,WAAW,CAACC,OAAO,CAACF,UAAU,CAAC,KAAK,CAAC,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACN,GAAG,EAAEO,IAAI,EAAE;EAC/C,IAAIC,QAAQ,GAAGV,IAAI,CAACE,GAAG,EAAE,UAAU,CAAC;EACpC,IAAIS,MAAM,GAAGX,IAAI,CAACE,GAAG,EAAE,QAAQ,CAAC;EAChC,IAAIU,QAAQ,GAAGH,IAAI,CAAC,CAAC,CAAC;EACtB,IAAII,GAAG,GAAGF,MAAM,GAAGF,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;EAEpC,IAAIC,QAAQ,EAAE;IACZ,OAAOA,QAAQ;EACjB;EAEA,IAAI,OAAOG,GAAG,KAAK,UAAU,EAAEA,GAAG,GAAGA,GAAG,CAAC,CAAC;EAE1CA,GAAG,GAAGA,GAAG,IAAI,EAAE;EACf,IAAI,CAACA,GAAG,EAAE;IACR,OAAOC,SAAS;EAClB;EAEA,IAAI,UAAU,CAACC,IAAI,CAACF,GAAG,CAAC,EAAE;IACxB,OAAOC,SAAS;EAClB;EAEA,IAAIE,QAAQ,GAAGf,YAAY,CAACW,QAAQ,CAAC;EACrC,IAAI,SAAS,CAACG,IAAI,CAACF,GAAG,CAAC,EAAE;IACvB,OAAOG,QAAQ,GAAG,oBAAoB,GAAG,gBAAgB;EAC3D;EAEA,OAAOA,QAAQ,GAAG,iBAAiB,GAAG,aAAa;AACrD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}