{"ast":null,"code":"/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function () {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function (name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object') return true;\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call = Function.prototype.call,\n  apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () {};\n  }\n  var chainableBehavior = {\n    method: method,\n    chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n  Object.defineProperty(ctx, name, {\n    get: function chainableMethodGetter() {\n      chainableBehavior.chainingBehavior.call(this);\n      var chainableMethodWrapper = function () {\n        // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n        // function to be the starting point for removing implementation\n        // frames from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set.\n        //\n        // If the `lockSsfi` flag is set, then this assertion is being\n        // invoked from inside of another assertion. In this case, the `ssfi`\n        // flag has already been set by the outer assertion.\n        //\n        // Note that overwriting a chainable method merely replaces the saved\n        // methods in `ctx.__methods` instead of completely replacing the\n        // overwritten assertion. Therefore, an overwriting assertion won't\n        // set the `ssfi` or `lockSsfi` flags.\n        if (!flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', chainableMethodWrapper);\n        }\n        var result = chainableBehavior.method.apply(this, arguments);\n        if (result !== undefined) {\n          return result;\n        }\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      };\n      addLengthGuard(chainableMethodWrapper, name, true);\n\n      // Use `Object.setPrototypeOf` if available\n      if (canSetPrototype) {\n        // Inherit all properties from the object by replacing the `Function` prototype\n        var prototype = Object.create(this);\n        // Restore the `call` and `apply` methods from `Function`\n        prototype.call = call;\n        prototype.apply = apply;\n        Object.setPrototypeOf(chainableMethodWrapper, prototype);\n      }\n      // Otherwise, redefine all properties (slow!)\n      else {\n        var asserterNames = Object.getOwnPropertyNames(ctx);\n        asserterNames.forEach(function (asserterName) {\n          if (excludeNames.indexOf(asserterName) !== -1) {\n            return;\n          }\n          var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n          Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n        });\n      }\n      transferFlags(this, chainableMethodWrapper);\n      return proxify(chainableMethodWrapper);\n    },\n    configurable: true\n  });\n};","map":{"version":3,"names":["addLengthGuard","require","chai","flag","proxify","transferFlags","canSetPrototype","Object","setPrototypeOf","testFn","excludeNames","getOwnPropertyNames","filter","name","propDesc","getOwnPropertyDescriptor","configurable","call","Function","prototype","apply","module","exports","addChainableMethod","ctx","method","chainingBehavior","chainableBehavior","__methods","defineProperty","get","chainableMethodGetter","chainableMethodWrapper","result","arguments","undefined","newAssertion","Assertion","create","asserterNames","forEach","asserterName","indexOf","pd"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/chai/lib/chai/utils/addChainableMethod.js"],"sourcesContent":["/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,IAAI,GAAGD,OAAO,CAAC,YAAY,CAAC;AAChC,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;AAClC,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;;AAEA;AACA,IAAIK,eAAe,GAAG,OAAOC,MAAM,CAACC,cAAc,KAAK,UAAU;;AAEjE;AACA;AACA,IAAIC,MAAM,GAAG,SAAAA,CAAA,EAAW,CAAC,CAAC;AAC1B,IAAIC,YAAY,GAAGH,MAAM,CAACI,mBAAmB,CAACF,MAAM,CAAC,CAACG,MAAM,CAAC,UAASC,IAAI,EAAE;EAC1E,IAAIC,QAAQ,GAAGP,MAAM,CAACQ,wBAAwB,CAACN,MAAM,EAAEI,IAAI,CAAC;;EAE5D;EACA;EACA;EACA;EACA,IAAI,OAAOC,QAAQ,KAAK,QAAQ,EAC9B,OAAO,IAAI;EAEb,OAAO,CAACA,QAAQ,CAACE,YAAY;AAC/B,CAAC,CAAC;;AAEF;AACA,IAAIC,IAAI,GAAIC,QAAQ,CAACC,SAAS,CAACF,IAAI;EAC/BG,KAAK,GAAGF,QAAQ,CAACC,SAAS,CAACC,KAAK;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,GAAG,EAAEX,IAAI,EAAEY,MAAM,EAAEC,gBAAgB,EAAE;EAChF,IAAI,OAAOA,gBAAgB,KAAK,UAAU,EAAE;IAC1CA,gBAAgB,GAAG,SAAAA,CAAA,EAAY,CAAE,CAAC;EACpC;EAEA,IAAIC,iBAAiB,GAAG;IACpBF,MAAM,EAAEA,MAAM;IACdC,gBAAgB,EAAEA;EACtB,CAAC;;EAED;EACA,IAAI,CAACF,GAAG,CAACI,SAAS,EAAE;IAClBJ,GAAG,CAACI,SAAS,GAAG,CAAC,CAAC;EACpB;EACAJ,GAAG,CAACI,SAAS,CAACf,IAAI,CAAC,GAAGc,iBAAiB;EAEvCpB,MAAM,CAACsB,cAAc,CAACL,GAAG,EAAEX,IAAI,EAC7B;IAAEiB,GAAG,EAAE,SAASC,qBAAqBA,CAAA,EAAG;MACpCJ,iBAAiB,CAACD,gBAAgB,CAACT,IAAI,CAAC,IAAI,CAAC;MAE7C,IAAIe,sBAAsB,GAAG,SAAAA,CAAA,EAAY;QACvC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI,CAAC7B,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;UAC3BA,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE6B,sBAAsB,CAAC;QAC5C;QAEA,IAAIC,MAAM,GAAGN,iBAAiB,CAACF,MAAM,CAACL,KAAK,CAAC,IAAI,EAAEc,SAAS,CAAC;QAC5D,IAAID,MAAM,KAAKE,SAAS,EAAE;UACxB,OAAOF,MAAM;QACf;QAEA,IAAIG,YAAY,GAAG,IAAIlC,IAAI,CAACmC,SAAS,CAAC,CAAC;QACvChC,aAAa,CAAC,IAAI,EAAE+B,YAAY,CAAC;QACjC,OAAOA,YAAY;MACrB,CAAC;MAEDpC,cAAc,CAACgC,sBAAsB,EAAEnB,IAAI,EAAE,IAAI,CAAC;;MAElD;MACA,IAAIP,eAAe,EAAE;QACnB;QACA,IAAIa,SAAS,GAAGZ,MAAM,CAAC+B,MAAM,CAAC,IAAI,CAAC;QACnC;QACAnB,SAAS,CAACF,IAAI,GAAGA,IAAI;QACrBE,SAAS,CAACC,KAAK,GAAGA,KAAK;QACvBb,MAAM,CAACC,cAAc,CAACwB,sBAAsB,EAAEb,SAAS,CAAC;MAC1D;MACA;MAAA,KACK;QACH,IAAIoB,aAAa,GAAGhC,MAAM,CAACI,mBAAmB,CAACa,GAAG,CAAC;QACnDe,aAAa,CAACC,OAAO,CAAC,UAAUC,YAAY,EAAE;UAC5C,IAAI/B,YAAY,CAACgC,OAAO,CAACD,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7C;UACF;UAEA,IAAIE,EAAE,GAAGpC,MAAM,CAACQ,wBAAwB,CAACS,GAAG,EAAEiB,YAAY,CAAC;UAC3DlC,MAAM,CAACsB,cAAc,CAACG,sBAAsB,EAAES,YAAY,EAAEE,EAAE,CAAC;QACjE,CAAC,CAAC;MACJ;MAEAtC,aAAa,CAAC,IAAI,EAAE2B,sBAAsB,CAAC;MAC3C,OAAO5B,OAAO,CAAC4B,sBAAsB,CAAC;IACxC,CAAC;IACDhB,YAAY,EAAE;EAClB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}