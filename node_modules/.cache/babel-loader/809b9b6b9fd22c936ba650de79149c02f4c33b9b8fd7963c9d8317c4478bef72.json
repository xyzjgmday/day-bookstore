{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inspectList = inspectList;\nexports.inspectProperty = inspectProperty;\nexports.normaliseOptions = normaliseOptions;\nexports.truncate = truncate;\nexports.truncator = void 0;\nconst ansiColors = {\n  bold: ['1', '22'],\n  dim: ['2', '22'],\n  italic: ['3', '23'],\n  underline: ['4', '24'],\n  // 5 & 6 are blinking\n  inverse: ['7', '27'],\n  hidden: ['8', '28'],\n  strike: ['9', '29'],\n  // 10-20 are fonts\n  // 21-29 are resets for 1-9\n  black: ['30', '39'],\n  red: ['31', '39'],\n  green: ['32', '39'],\n  yellow: ['33', '39'],\n  blue: ['34', '39'],\n  magenta: ['35', '39'],\n  cyan: ['36', '39'],\n  white: ['37', '39'],\n  brightblack: ['30;1', '39'],\n  brightred: ['31;1', '39'],\n  brightgreen: ['32;1', '39'],\n  brightyellow: ['33;1', '39'],\n  brightblue: ['34;1', '39'],\n  brightmagenta: ['35;1', '39'],\n  brightcyan: ['36;1', '39'],\n  brightwhite: ['37;1', '39'],\n  grey: ['90', '39']\n};\nconst styles = {\n  special: 'cyan',\n  number: 'yellow',\n  bigint: 'yellow',\n  boolean: 'yellow',\n  undefined: 'grey',\n  null: 'bold',\n  string: 'green',\n  symbol: 'green',\n  date: 'magenta',\n  regexp: 'red'\n};\nconst truncator = '…';\nexports.truncator = truncator;\nfunction colorise(value, styleType) {\n  const color = ansiColors[styles[styleType]] || ansiColors[styleType];\n  if (!color) {\n    return String(value);\n  }\n  return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`;\n}\nfunction normaliseOptions({\n  showHidden = false,\n  depth = 2,\n  colors = false,\n  customInspect = true,\n  showProxy = false,\n  maxArrayLength = Infinity,\n  breakLength = Infinity,\n  seen = [],\n  // eslint-disable-next-line no-shadow\n  truncate = Infinity,\n  stylize = String\n} = {}) {\n  const options = {\n    showHidden: Boolean(showHidden),\n    depth: Number(depth),\n    colors: Boolean(colors),\n    customInspect: Boolean(customInspect),\n    showProxy: Boolean(showProxy),\n    maxArrayLength: Number(maxArrayLength),\n    breakLength: Number(breakLength),\n    truncate: Number(truncate),\n    seen,\n    stylize\n  };\n  if (options.colors) {\n    options.stylize = colorise;\n  }\n  return options;\n}\nfunction truncate(string, length, tail = truncator) {\n  string = String(string);\n  const tailLength = tail.length;\n  const stringLength = string.length;\n  if (tailLength > length && stringLength > tailLength) {\n    return tail;\n  }\n  if (stringLength > length && stringLength > tailLength) {\n    return `${string.slice(0, length - tailLength)}${tail}`;\n  }\n  return string;\n}\n\n// eslint-disable-next-line complexity\nfunction inspectList(list, options, inspectItem, separator = ', ') {\n  inspectItem = inspectItem || options.inspect;\n  const size = list.length;\n  if (size === 0) return '';\n  const originalLength = options.truncate;\n  let output = '';\n  let peek = '';\n  let truncated = '';\n  for (let i = 0; i < size; i += 1) {\n    const last = i + 1 === list.length;\n    const secondToLast = i + 2 === list.length;\n    truncated = `${truncator}(${list.length - i})`;\n    const value = list[i];\n\n    // If there is more than one remaining we need to account for a separator of `, `\n    options.truncate = originalLength - output.length - (last ? 0 : separator.length);\n    const string = peek || inspectItem(value, options) + (last ? '' : separator);\n    const nextLength = output.length + string.length;\n    const truncatedLength = nextLength + truncated.length;\n\n    // If this is the last element, and adding it would\n    // take us over length, but adding the truncator wouldn't - then break now\n    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n      break;\n    }\n\n    // If this isn't the last or second to last element to scan,\n    // but the string is already over length then break here\n    if (!last && !secondToLast && truncatedLength > originalLength) {\n      break;\n    }\n\n    // Peek at the next string to determine if we should\n    // break early before adding this item to the output\n    peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator);\n\n    // If we have one element left, but this element and\n    // the next takes over length, the break early\n    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n      break;\n    }\n    output += string;\n\n    // If the next element takes us to length -\n    // but there are more after that, then we should truncate now\n    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n      truncated = `${truncator}(${list.length - i - 1})`;\n      break;\n    }\n    truncated = '';\n  }\n  return `${output}${truncated}`;\n}\nfunction quoteComplexKey(key) {\n  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n    return key;\n  }\n  return JSON.stringify(key).replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n}\nfunction inspectProperty([key, value], options) {\n  options.truncate -= 2;\n  if (typeof key === 'string') {\n    key = quoteComplexKey(key);\n  } else if (typeof key !== 'number') {\n    key = `[${options.inspect(key, options)}]`;\n  }\n  options.truncate -= key.length;\n  value = options.inspect(value, options);\n  return `${key}: ${value}`;\n}","map":{"version":3,"names":["ansiColors","bold","dim","italic","underline","inverse","hidden","strike","black","red","green","yellow","blue","magenta","cyan","white","brightblack","brightred","brightgreen","brightyellow","brightblue","brightmagenta","brightcyan","brightwhite","grey","styles","special","number","bigint","boolean","undefined","null","string","symbol","date","regexp","truncator","exports","colorise","value","styleType","color","String","normaliseOptions","showHidden","depth","colors","customInspect","showProxy","maxArrayLength","Infinity","breakLength","seen","truncate","stylize","options","Boolean","Number","length","tail","tailLength","stringLength","slice","inspectList","list","inspectItem","separator","inspect","size","originalLength","output","peek","truncated","i","last","secondToLast","nextLength","truncatedLength","quoteComplexKey","key","match","JSON","stringify","replace","inspectProperty"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/loupe/lib/helpers.js"],"sourcesContent":["const ansiColors = {\n  bold: ['1', '22'],\n  dim: ['2', '22'],\n  italic: ['3', '23'],\n  underline: ['4', '24'],\n  // 5 & 6 are blinking\n  inverse: ['7', '27'],\n  hidden: ['8', '28'],\n  strike: ['9', '29'],\n  // 10-20 are fonts\n  // 21-29 are resets for 1-9\n  black: ['30', '39'],\n  red: ['31', '39'],\n  green: ['32', '39'],\n  yellow: ['33', '39'],\n  blue: ['34', '39'],\n  magenta: ['35', '39'],\n  cyan: ['36', '39'],\n  white: ['37', '39'],\n\n  brightblack: ['30;1', '39'],\n  brightred: ['31;1', '39'],\n  brightgreen: ['32;1', '39'],\n  brightyellow: ['33;1', '39'],\n  brightblue: ['34;1', '39'],\n  brightmagenta: ['35;1', '39'],\n  brightcyan: ['36;1', '39'],\n  brightwhite: ['37;1', '39'],\n\n  grey: ['90', '39'],\n}\n\nconst styles = {\n  special: 'cyan',\n  number: 'yellow',\n  bigint: 'yellow',\n  boolean: 'yellow',\n  undefined: 'grey',\n  null: 'bold',\n  string: 'green',\n  symbol: 'green',\n  date: 'magenta',\n  regexp: 'red',\n}\n\nexport const truncator = '…'\n\nfunction colorise(value, styleType) {\n  const color = ansiColors[styles[styleType]] || ansiColors[styleType]\n  if (!color) {\n    return String(value)\n  }\n  return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`\n}\n\nexport function normaliseOptions({\n  showHidden = false,\n  depth = 2,\n  colors = false,\n  customInspect = true,\n  showProxy = false,\n  maxArrayLength = Infinity,\n  breakLength = Infinity,\n  seen = [],\n  // eslint-disable-next-line no-shadow\n  truncate = Infinity,\n  stylize = String,\n} = {}) {\n  const options = {\n    showHidden: Boolean(showHidden),\n    depth: Number(depth),\n    colors: Boolean(colors),\n    customInspect: Boolean(customInspect),\n    showProxy: Boolean(showProxy),\n    maxArrayLength: Number(maxArrayLength),\n    breakLength: Number(breakLength),\n    truncate: Number(truncate),\n    seen,\n    stylize,\n  }\n  if (options.colors) {\n    options.stylize = colorise\n  }\n  return options\n}\n\nexport function truncate(string, length, tail = truncator) {\n  string = String(string)\n  const tailLength = tail.length\n  const stringLength = string.length\n  if (tailLength > length && stringLength > tailLength) {\n    return tail\n  }\n  if (stringLength > length && stringLength > tailLength) {\n    return `${string.slice(0, length - tailLength)}${tail}`\n  }\n  return string\n}\n\n// eslint-disable-next-line complexity\nexport function inspectList(list, options, inspectItem, separator = ', ') {\n  inspectItem = inspectItem || options.inspect\n  const size = list.length\n  if (size === 0) return ''\n  const originalLength = options.truncate\n  let output = ''\n  let peek = ''\n  let truncated = ''\n  for (let i = 0; i < size; i += 1) {\n    const last = i + 1 === list.length\n    const secondToLast = i + 2 === list.length\n    truncated = `${truncator}(${list.length - i})`\n    const value = list[i]\n\n    // If there is more than one remaining we need to account for a separator of `, `\n    options.truncate = originalLength - output.length - (last ? 0 : separator.length)\n    const string = peek || inspectItem(value, options) + (last ? '' : separator)\n    const nextLength = output.length + string.length\n    const truncatedLength = nextLength + truncated.length\n\n    // If this is the last element, and adding it would\n    // take us over length, but adding the truncator wouldn't - then break now\n    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n      break\n    }\n\n    // If this isn't the last or second to last element to scan,\n    // but the string is already over length then break here\n    if (!last && !secondToLast && truncatedLength > originalLength) {\n      break\n    }\n\n    // Peek at the next string to determine if we should\n    // break early before adding this item to the output\n    peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator)\n\n    // If we have one element left, but this element and\n    // the next takes over length, the break early\n    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n      break\n    }\n\n    output += string\n\n    // If the next element takes us to length -\n    // but there are more after that, then we should truncate now\n    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n      truncated = `${truncator}(${list.length - i - 1})`\n      break\n    }\n\n    truncated = ''\n  }\n  return `${output}${truncated}`\n}\n\nfunction quoteComplexKey(key) {\n  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n    return key\n  }\n  return JSON.stringify(key)\n    .replace(/'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\"')\n    .replace(/(^\"|\"$)/g, \"'\")\n}\n\nexport function inspectProperty([key, value], options) {\n  options.truncate -= 2\n  if (typeof key === 'string') {\n    key = quoteComplexKey(key)\n  } else if (typeof key !== 'number') {\n    key = `[${options.inspect(key, options)}]`\n  }\n  options.truncate -= key.length\n  value = options.inspect(value, options)\n  return `${key}: ${value}`\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}