{"ast":null,"code":"var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' && config.proxyExcludedKeys.indexOf(property) === -1 && !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' + property + '. See docs for proper usage of \"' + nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function (prop) {\n          if (!Object.prototype.hasOwnProperty(prop) && builtins.indexOf(prop) === -1) {\n            var dist = stringDistanceCapped(property, prop, suggestionDistance);\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property + '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(memo[i - 1][j] + 1, memo[i][j - 1] + 1, memo[i - 1][j - 1] + (ch === strB.charCodeAt(j - 1) ? 0 : 1));\n    }\n  }\n  return memo[strA.length][strB.length];\n}","map":{"version":3,"names":["config","require","flag","getProperties","isProxyEnabled","builtins","module","exports","proxify","obj","nonChainableMethodName","Proxy","get","proxyGetter","target","property","proxyExcludedKeys","indexOf","Reflect","has","Error","suggestion","suggestionDistance","forEach","prop","Object","prototype","hasOwnProperty","dist","stringDistanceCapped","strA","strB","cap","Math","abs","length","memo","i","Array","fill","j","ch","charCodeAt","min"],"sources":["C:/laragon/www/vue-projects/bookstore/node_modules/chai/lib/chai/utils/proxify.js"],"sourcesContent":["var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAII,QAAQ,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEzDC,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,GAAG,EAAEC,sBAAsB,EAAE;EAC7D,IAAI,CAACN,cAAc,CAAC,CAAC,EAAE,OAAOK,GAAG;EAEjC,OAAO,IAAIE,KAAK,CAACF,GAAG,EAAE;IACpBG,GAAG,EAAE,SAASC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAE;MAC1C;MACA;MACA;MACA;MACA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAC5Bf,MAAM,CAACgB,iBAAiB,CAACC,OAAO,CAACF,QAAQ,CAAC,KAAK,CAAC,CAAC,IACjD,CAACG,OAAO,CAACC,GAAG,CAACL,MAAM,EAAEC,QAAQ,CAAC,EAAE;QAClC;QACA,IAAIL,sBAAsB,EAAE;UAC1B,MAAMU,KAAK,CAAC,yBAAyB,GAAGV,sBAAsB,GAAG,GAAG,GAClEK,QAAQ,GAAG,kCAAkC,GAC7CL,sBAAsB,GAAG,IAAI,CAAC;QAClC;;QAEA;QACA;QACA;QACA,IAAIW,UAAU,GAAG,IAAI;QACrB,IAAIC,kBAAkB,GAAG,CAAC;QAC1BnB,aAAa,CAACW,MAAM,CAAC,CAACS,OAAO,CAAC,UAASC,IAAI,EAAE;UAC3C,IACE,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACH,IAAI,CAAC,IACtCnB,QAAQ,CAACY,OAAO,CAACO,IAAI,CAAC,KAAK,CAAC,CAAC,EAC7B;YACA,IAAII,IAAI,GAAGC,oBAAoB,CAC7Bd,QAAQ,EACRS,IAAI,EACJF,kBACF,CAAC;YACD,IAAIM,IAAI,GAAGN,kBAAkB,EAAE;cAC7BD,UAAU,GAAGG,IAAI;cACjBF,kBAAkB,GAAGM,IAAI;YAC3B;UACF;QACF,CAAC,CAAC;QAEF,IAAIP,UAAU,KAAK,IAAI,EAAE;UACvB,MAAMD,KAAK,CAAC,yBAAyB,GAAGL,QAAQ,GAC9C,kBAAkB,GAAGM,UAAU,GAAG,IAAI,CAAC;QAC3C,CAAC,MAAM;UACL,MAAMD,KAAK,CAAC,yBAAyB,GAAGL,QAAQ,CAAC;QACnD;MACF;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIV,QAAQ,CAACY,OAAO,CAACF,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAACb,IAAI,CAACY,MAAM,EAAE,UAAU,CAAC,EAAE;QAClEZ,IAAI,CAACY,MAAM,EAAE,MAAM,EAAED,WAAW,CAAC;MACnC;MAEA,OAAOK,OAAO,CAACN,GAAG,CAACE,MAAM,EAAEC,QAAQ,CAAC;IACtC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASc,oBAAoBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAE;EAC7C,IAAIC,IAAI,CAACC,GAAG,CAACJ,IAAI,CAACK,MAAM,GAAGJ,IAAI,CAACI,MAAM,CAAC,IAAIH,GAAG,EAAE;IAC9C,OAAOA,GAAG;EACZ;EAEA,IAAII,IAAI,GAAG,EAAE;EACb;EACA;EACA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,CAACK,MAAM,EAAEE,CAAC,EAAE,EAAE;IACrCD,IAAI,CAACC,CAAC,CAAC,GAAGC,KAAK,CAACP,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IACxCH,IAAI,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC;EAChB;EACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,CAACI,MAAM,EAAEK,CAAC,EAAE,EAAE;IACpCJ,IAAI,CAAC,CAAC,CAAC,CAACI,CAAC,CAAC,GAAGA,CAAC;EAChB;EAEA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,CAACK,MAAM,EAAEE,CAAC,EAAE,EAAE;IACrC,IAAII,EAAE,GAAGX,IAAI,CAACY,UAAU,CAACL,CAAC,GAAG,CAAC,CAAC;IAC/B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,IAAI,CAACI,MAAM,EAAEK,CAAC,EAAE,EAAE;MACrC,IAAIP,IAAI,CAACC,GAAG,CAACG,CAAC,GAAGG,CAAC,CAAC,IAAIR,GAAG,EAAE;QAC1BI,IAAI,CAACC,CAAC,CAAC,CAACG,CAAC,CAAC,GAAGR,GAAG;QAChB;MACF;MACAI,IAAI,CAACC,CAAC,CAAC,CAACG,CAAC,CAAC,GAAGP,IAAI,CAACU,GAAG,CACnBP,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,CAAC,GAAG,CAAC,EAClBJ,IAAI,CAACC,CAAC,CAAC,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAClBJ,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG,CAAC,CAAC,IACfC,EAAE,KAAKV,IAAI,CAACW,UAAU,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1C,CAAC;IACH;EACF;EAEA,OAAOJ,IAAI,CAACN,IAAI,CAACK,MAAM,CAAC,CAACJ,IAAI,CAACI,MAAM,CAAC;AACvC"},"metadata":{},"sourceType":"script","externalDependencies":[]}